//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Checkers.CheckersServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CheckersServiceReference.ICheckersService")]
    public interface ICheckersService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckersService/GetUserPasswordHash", ReplyAction="http://tempuri.org/ICheckersService/GetUserPasswordHashResponse")]
        string GetUserPasswordHash(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckersService/GetUserPasswordHash", ReplyAction="http://tempuri.org/ICheckersService/GetUserPasswordHashResponse")]
        System.Threading.Tasks.Task<string> GetUserPasswordHashAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckersService/GetUserNames", ReplyAction="http://tempuri.org/ICheckersService/GetUserNamesResponse")]
        string[] GetUserNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckersService/GetUserNames", ReplyAction="http://tempuri.org/ICheckersService/GetUserNamesResponse")]
        System.Threading.Tasks.Task<string[]> GetUserNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckersService/GetUserProperties", ReplyAction="http://tempuri.org/ICheckersService/GetUserPropertiesResponse")]
        string[] GetUserProperties(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckersService/GetUserProperties", ReplyAction="http://tempuri.org/ICheckersService/GetUserPropertiesResponse")]
        System.Threading.Tasks.Task<string[]> GetUserPropertiesAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckersService/AddUser", ReplyAction="http://tempuri.org/ICheckersService/AddUserResponse")]
        bool AddUser(string fullname, string position, string sector, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckersService/AddUser", ReplyAction="http://tempuri.org/ICheckersService/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(string fullname, string position, string sector, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckersService/ChangeUser", ReplyAction="http://tempuri.org/ICheckersService/ChangeUserResponse")]
        bool ChangeUser(string id, string fullname, string position, string sector, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckersService/ChangeUser", ReplyAction="http://tempuri.org/ICheckersService/ChangeUserResponse")]
        System.Threading.Tasks.Task<bool> ChangeUserAsync(string id, string fullname, string position, string sector, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckersService/DeleteUser", ReplyAction="http://tempuri.org/ICheckersService/DeleteUserResponse")]
        bool DeleteUser(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckersService/DeleteUser", ReplyAction="http://tempuri.org/ICheckersService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckersService/GetDate", ReplyAction="http://tempuri.org/ICheckersService/GetDateResponse")]
        System.DateTime GetDate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckersService/GetDate", ReplyAction="http://tempuri.org/ICheckersService/GetDateResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetDateAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICheckersServiceChannel : Checkers.CheckersServiceReference.ICheckersService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckersServiceClient : System.ServiceModel.ClientBase<Checkers.CheckersServiceReference.ICheckersService>, Checkers.CheckersServiceReference.ICheckersService {
        
        public CheckersServiceClient() {
        }
        
        public CheckersServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CheckersServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CheckersServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CheckersServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetUserPasswordHash(string id) {
            return base.Channel.GetUserPasswordHash(id);
        }
        
        public System.Threading.Tasks.Task<string> GetUserPasswordHashAsync(string id) {
            return base.Channel.GetUserPasswordHashAsync(id);
        }
        
        public string[] GetUserNames() {
            return base.Channel.GetUserNames();
        }
        
        public System.Threading.Tasks.Task<string[]> GetUserNamesAsync() {
            return base.Channel.GetUserNamesAsync();
        }
        
        public string[] GetUserProperties(string id) {
            return base.Channel.GetUserProperties(id);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUserPropertiesAsync(string id) {
            return base.Channel.GetUserPropertiesAsync(id);
        }
        
        public bool AddUser(string fullname, string position, string sector, string hash) {
            return base.Channel.AddUser(fullname, position, sector, hash);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(string fullname, string position, string sector, string hash) {
            return base.Channel.AddUserAsync(fullname, position, sector, hash);
        }
        
        public bool ChangeUser(string id, string fullname, string position, string sector, string hash) {
            return base.Channel.ChangeUser(id, fullname, position, sector, hash);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeUserAsync(string id, string fullname, string position, string sector, string hash) {
            return base.Channel.ChangeUserAsync(id, fullname, position, sector, hash);
        }
        
        public bool DeleteUser(string id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(string id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public System.DateTime GetDate() {
            return base.Channel.GetDate();
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetDateAsync() {
            return base.Channel.GetDateAsync();
        }
    }
}
